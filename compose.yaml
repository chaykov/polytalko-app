services:
  react-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: polytalko-react-prod
    ports:
      - "8080:8080"
    restart: unless-stopped
    environment:
      NODE_ENV: production
    networks:
      - polytalko-network

  react-dev:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: polytalko-react-dev
    ports:
      - "5173:5173"
    environment:
      NODE_ENV: development
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: sync
          path: ./public
          target: /app/public
        - action: rebuild
          path: package.json
        - action: rebuild
          path: vite.config.ts
    networks:
      - polytalko-network

  react-test:
    build:
      context: .
      dockerfile: dev.Dockerfile
    container_name: polytalko-react-test
    command: ["npm", "run", "test"]
    networks:
      - polytalko-network

networks:
  polytalko-network:
    driver: bridge

# The commented out section below is an example of how to define a PostgreSQL
# database that your application can use. `depends_on` tells Docker Compose to
# start the database before your application. The `db-data` volume persists the
# database data between container restarts. The `db-password` secret is used
# to set the database password. You must create `db/password.txt` and add
# a password of your choosing to it before running `docker-compose up`.
#     depends_on:
#       db:
#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

